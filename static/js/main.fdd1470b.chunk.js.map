{"version":3,"sources":["App.jsx","index.js"],"names":["useStyles","makeStyles","charSuccess","color","borderBottom","charError","box","fontSize","marginBottom","caret","backgroundColor","textForTrainContainer","display","flexDirection","alignItems","marginTop","textForTrainInput","width","textForTrainButton","mainContainer","paddingTop","margin","actionButtonsContainer","App","classes","useState","textForTrain","setTextForTrain","pointer","setPointer","split","map","letter","index","key","className","char","resultText","setResultText","inputNewTextForTrain","setInputNewTextForTrain","useEffect","startDate","setStartDate","finishDate","setFinishDate","typoNumber","setTypoNumber","overallTypoNumber","setOverallTypoNumber","isMobile","setIsMobile","theme","useTheme","mathches","useMediaQuery","breakpoints","down","clearStates","Date","now","length","handleLetterPress","prev","newText","handleBackspacePress","undefined","props","slice","ref","useRef","disableTextForTrainChange","trim","totalTime","typingSpeed","Math","round","accuracy","CssBaseline","Container","maxWidth","style","overflow","Typography","variant","Box","TextField","value","onChange","e","target","placeholder","Button","disabled","onClick","onKeyDown","tabIndex","onBlur","current","focus","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdd1470b.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container'\nimport { makeStyles, useTheme, useMediaQuery } from '@material-ui/core';\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { useRef } from 'react';\n\nconst useStyles = makeStyles({\n  charSuccess: {\n    color: 'green',\n    borderBottom: '3px solid green'\n  },\n  charError: {\n    color: 'red',\n    borderBottom: '3px solid red'\n  },\n  box: {\n    fontSize: '25px',\n    marginBottom: '25px'\n  },\n  caret: {\n    backgroundColor: 'yellow'\n  },\n  textForTrainContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '25px'\n  },\n  textForTrainInput: {\n    width: '50vw',\n    marginBottom: '25px'\n  },\n  textForTrainButton: {\n    width: '25vw'\n  },\n  mainContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    paddingTop: '25px',\n    margin: '25px'\n  },\n  actionButtonsContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  }\n})\n\nconst App = () => {\n  const classes = useStyles();\n\n  const [textForTrain, setTextForTrain] = useState('Lorem ipsum dolor sit amet')\n\n  const [pointer, setPointer] = useState(-1)\n  const [resultText, setResultText] = useState(textForTrain.split('').map((letter, index) => <span key={index} className={classes.char}>{letter}</span>))\n\n  const [inputNewTextForTrain, setInputNewTextForTrain] = useState('')\n\n  useEffect(() => {\n    setResultText(textForTrain.split('').map((letter, index) => <span key={index} className={classes.char}>{letter}</span>))\n  }, [textForTrain, classes.char])\n\n  const [startDate, setStartDate] = useState()\n  const [finishDate, setFinishDate] = useState()\n\n  const [typoNumber, setTypoNumber] = useState(0)\n  const [overallTypoNumber, setOverallTypoNumber] = useState(0)\n\n  const [isMobile, setIsMobile] = useState(false)\n\n  const theme = useTheme()\n  const mathches = useMediaQuery(theme.breakpoints.down('sm'))\n\n  useEffect(() => {\n    setIsMobile(mathches)\n  }, [mathches])\n\n  const typingStart = () => {\n    setStartDate(Date.now())\n  }\n\n  const typingFinish = () => {\n    setFinishDate(Date.now())\n  }\n\n  const clearStates = () => {\n    setPointer(-1)\n    setResultText(textForTrain.split('').map((letter, index) => <span key={index} className={classes.char}>{letter}</span>))\n    setStartDate()\n    setFinishDate()\n    setTypoNumber(0)\n    setOverallTypoNumber(0)\n  }\n\n  useEffect(() => {\n    if (pointer === 0) {\n      typingStart()\n    }\n    if (pointer === textForTrain.length - 1) {\n      typingFinish()\n    }\n  }, [pointer, typoNumber, textForTrain.length])\n\n  const handleKeyDown = (e) => {\n    const key = e.key;\n    if (key.length === 1) {\n      handleLetterPress(key, pointer)\n    }\n    else if (key === 'Backspace') {\n      handleBackspacePress(pointer)\n    }\n    return\n  }\n\n  const handleLetterPress = (key, pointer) => {\n    if (key !== textForTrain[pointer + 1] && !finishDate) {\n      setTypoNumber((prev) => prev + 1)\n      setOverallTypoNumber((prev) => prev + 1)\n    }\n    setResultText((prev) => {\n      let newText = [...prev]\n      newText[pointer + 2] = (\n        <span\n          key={`_${key}${pointer + 2}_`}\n          className={classes.caret}>\n          {textForTrain[pointer + 2]}\n        </span>\n      )\n      newText[pointer + 1] = (\n        <span\n          key={`_${key}${pointer + 1}_`}\n          className={(key === textForTrain[pointer + 1]) ? classes.charSuccess : classes.charError}>\n          {textForTrain[pointer + 1]}\n        </span>\n      )\n      return newText\n    })\n    setPointer((prev) => prev < textForTrain.length ? prev + 1 : prev)\n  }\n\n  const handleBackspacePress = (pointer) => {\n    if (resultText[pointer] !== undefined && resultText[pointer].props.className.slice(0, 20) === 'makeStyles-charError') {\n      setTypoNumber((prev) => prev - 1)\n    }\n    setResultText((prev) => {\n      let newText = [...prev]\n      newText[pointer + 1] = <span key={`_deleted${pointer + 1}_`}>{textForTrain[pointer + 1]}</span>\n      newText[pointer] = <span key={`_deleted${pointer}_`} className={classes.caret}>{textForTrain[pointer]}</span>\n      return newText\n    })\n    setPointer((prev) => prev > -1 ? prev - 1 : prev)\n  }\n\n  const handleTextForTrainInputChange = (e) => {\n    setInputNewTextForTrain(e.target.value)\n  }\n\n  const updateTextForTrain = () => {\n    clearStates()\n    setTextForTrain(inputNewTextForTrain.trim())\n  }\n\n  const ref = useRef()\n\n  const focusOnMainContainer = () => {\n    ref.current.focus()\n  }\n\n  const handleMainContainerBlur = () => {\n    startDate && ref.current.focus()\n  }\n\n  const disableTextForTrainChange = !(inputNewTextForTrain.trim().length >= 10) || (startDate && !finishDate)\n  const totalTime = (finishDate - startDate) / 1000\n  const typingSpeed = Math.round((textForTrain.length / ((finishDate - startDate) / 1000 / 60)))\n  const accuracy = textForTrain.length > overallTypoNumber ? Math.round((textForTrain.length - overallTypoNumber) / textForTrain.length * 100) : 0\n\n  return (\n    <Fragment>\n      <CssBaseline />\n      <Container\n        maxWidth='xl'\n        style={{ overflow: 'hidden' }}>\n        {isMobile ?\n          <Typography variant='h2'>Please use this app from a PC so it can run properly</Typography> :\n          <Fragment>\n            <Box className={classes.textForTrainContainer}>\n              <TextField\n                className={classes.textForTrainInput}\n                variant='outlined'\n                value={inputNewTextForTrain}\n                onChange={handleTextForTrainInputChange}\n                placeholder='Enter text for train here (10 symbols or more) or use the example'>\n              </TextField>\n              <Button\n                className={classes.textForTrainButton}\n                variant='contained'\n                color='secondary'\n                disabled={disableTextForTrainChange}\n                onClick={updateTextForTrain}\n              >\n                Set new text for train\n              </Button>\n            </Box>\n            <Box\n              className={classes.mainContainer}\n              onKeyDown={handleKeyDown}\n              tabIndex='0'\n              ref={ref}\n              onBlur={handleMainContainerBlur}>\n              {finishDate && startDate && (\n                <Fragment>\n                  <Typography>Your time: {totalTime} seconds</Typography>\n                  <Typography>Your typing speed: {typingSpeed} symbols per minute</Typography>\n                  <Typography>Overall typos number: {overallTypoNumber}</Typography>\n                  <Typography>Unfixed typos number: {typoNumber}</Typography>\n                  <Typography>Your accuracy: {accuracy} %</Typography>\n                </Fragment>\n              )}\n              <Box className={classes.box}>{resultText}</Box>\n            </Box>\n            <Box className={classes.actionButtonsContainer}>\n              {!startDate ?\n                <Button\n                  variant='contained'\n                  color='primary'\n                  onClick={focusOnMainContainer}\n                >\n                  Start typing!\n                </Button> :\n                <Button\n                  variant='contained'\n                  color='primary'\n                  onClick={clearStates}\n                >\n                  Try again?\n                 </Button>\n              }\n            </Box>\n          </Fragment>\n        }\n      </Container>\n    </Fragment >\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}